import"leaflet";import{get as e,del as t,set as i}from"idb-keyval";class o{constructor(e,t){this.cacheMap=new Map,this.time=Math.floor((new Date).valueOf()/1e3),this.name="cache_tile_name",this.overdue=void 0,e&&(this.name=e),this.overdue=t,this.init()}async init(){const e=await this.checkDatabase();return e&&(this.cacheMap=e),Promise.resolve(this.cacheMap)}getTile(e){return this.cacheMap.get(e)}setTile(e,t,i=!1){const{cacheMap:o}=this;i?o.set(e,t):o.has(e)||o.set(e,t),this.updateDatabase()}async checkDatabase(){const i=await e(this.name),o=(new Date).valueOf()/1e3;return i?"NO"===i.time||i.time>o?i.data:(t(this.name),null):null}async updateDatabase(e=this.cacheMap){const{name:t}=this;await i(t,{data:e,time:this.getCacheTime()})}getCacheTime(){const{time:e,overdue:t}=this;return!t||"number"==typeof t&&t<0?"NO":+e+ +t}}if(!L)throw new Error("please install leaflet which >1.0.0 to use the plugins");let a={};const s=L.GridLayer.prototype._initTile,r=L.TileLayer.prototype.initialize,n=L.TileLayer.prototype.createTile,c=L.TileLayer.extend({initialize(e,t){t=L.extend({},L.TileLayer.prototype.options,{colorize:e=>e,cacheSet:(e={})=>e,crossOrigin:"Anonymous"},t),r.call(this,e,t),L.setOptions(this,t);const i=t.cacheSet({}),s=i.name||o.name;a[s]=new o(s,i.time),this.setColorizr(t.colorize),this.setCacheOptions(t.cacheSet),this.on("tileload",e=>{const t=Object.values(e.coords).join(":");this._colorize(e.tile,`${s}/${t}`)})},setColorizr(e){if(!e||"function"!=typeof e)throw'The colorize option should be a function and return an object with at least one of "r", "g", "b", or "a" properties. Got:'+typeof e;this.options.colorize=e,this.redraw(!1)},setCacheOptions(e){if(!e||"function"!=typeof e)throw'The cacheSet option should be a function and return an object with at least one of "name", "time" properties. Got:'+typeof e;this.options.cacheSet=e,this.redraw(!1)},_initTile(e){s.call(this,e);const t=this.getTileSize();e.style.width=`${t.x+1}px`,e.style.height=`${t.y+1}px`},createTile(e,t){const i=n.call(this,e,t);i.crossOrigin="Anonymous";const s=Object.values(e).join(":"),r=this.options.cacheSet({}).name||o.name,c=`${r}/${s}`,h=a[r].getTile(c);return h?(i.src=h,i.setAttribute("color-cache-loaded","true")):(i.hidden=!0,i.src="",a[r].init().then(o=>{if(i.src=this.getTileUrl(e),o.size){const e=a[r].getTile(c);e&&(i.src=e,i.setAttribute("color-cache-loaded","true"))}t(void 0,i)})),i},_colorize(e,t){if(e.getAttribute("color-cache-loaded"))return void(e.hidden=!1);e.hidden=!0;let i=new Image;i.crossOrigin="Anonymous",i.src=_img.src,i.onload=()=>{let e=document.createElement("canvas");e.width=i.width,e.height=i.height;let s=e.getContext("2d");s.drawImage(i,0,0);let r=s.getImageData(0,0,e.width,e.height),n=r.data;for(let e=0,t=n.length;e<t;e+=4){let t=this.options.colorize({r:n[e],g:n[e+1],b:n[e+2],a:n[e+3]});if(t&&t===Object(t)&&"[object Array]"!==Object.prototype.toString.call(t))t.hasOwnProperty("r")&&"number"==typeof t.r&&(n[e]=t.r),t.hasOwnProperty("g")&&(n[e+1]=t.g),t.hasOwnProperty("b")&&(n[e+2]=t.b),t.hasOwnProperty("a")&&(n[e+3]=t.a);else if(0===e)throw'The colorize option should return an object with at least one of "r", "g", "b", or "a" properties.'}s.putImageData(r,0,0),_img.setAttribute("color-cache-loaded","true");const c=e.toDataURL("image/webp",.8);_img.src=c;const h=this.options.cacheSet({}).name||o.name;a[h].setTile(t,c)}}});L.colorCacheTile=function(e,t){return new c(e,t)};
//# sourceMappingURL=leaflet-color-cache-tile.modern.js.map
